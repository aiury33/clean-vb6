# Clean VB6

I developed this project with the goal of achieving, inside VB6 (1998, without OOP) the cleanest software design possible in this legacy IDE. 

My motivation for this project stems from dealing with huge VB6 systems for several years that are true code Frankensteins - highly coupled and lacking cohesion. 
This results in significant fragility in the architecture of these applications and incurs a very high maintenance cost.

This repository is a purely recreational attempt to establish a healthy engineering approach using a language that, at the time of writing, is celebrating its 25th anniversary.

I applied some **SOLID** "energy" to create an application that, even in the absence of object-oriented features in VB6, would still have a minimum level of simplicity and healthy reuse of concepts. 

The program connects to SQL databases (which I called "clean" here) and performs stock movements (inserts and updates) for a specific product from a company. 

The repository includes a SQL script called "prepare_database" that does exactly what the name suggests, and the project is segregated into folders.

This is a work/study in progress. I would still like to create exception handling, which currently does not exist. 

I would also like to implement a DLL engineering approach for the business rules since legacy VB6 systems often run out of memory due to excessive code in the main project. 

I have also considered a few other implementations.
